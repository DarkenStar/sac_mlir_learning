module {
  func.func @test_type_syntax(%arg0: !poly.poly<10>) -> !poly.poly<10> {
    return %arg0 : !poly.poly<10>
  }
  func.func @test_binop_syntax(%arg0: !poly.poly<10>, %arg1: !poly.poly<10>) -> !poly.poly<10> {
    %0 = poly.add %arg0, %arg1 : (<10>, <10>) -> <10>
    %1 = poly.sub %arg0, %arg1 : (<10>, <10>) -> <10>
    %2 = poly.mul %arg0, %arg1 : (<10>, <10>) -> <10>
    %cst = arith.constant dense<[1, 2, 3]> : tensor<3xi32>
    %3 = poly.from_tensor %cst : tensor<3xi32> -> <10>
    %c7_i32 = arith.constant 7 : i32
    %4 = poly.eval %3, %c7_i32 : (<10>, i32) -> i32
    return %3 : !poly.poly<10>
  }
}

